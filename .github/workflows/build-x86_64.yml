name: x86_64 Build (TUI + Tauri)
on:
  release:
    types: [published]
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-tui:
    name: Build TUI for x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-tui-${{ hashFiles('**/Cargo.lock') }}

      - name: Build TUI
        run: |
          cargo build --release --bin hd-tui

      - name: Upload TUI artifact
        uses: actions/upload-artifact@v3
        with:
          name: hd-tui-x86_64
          path: target/release/hd-tui

      - name: Upload TUI to release
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} target/release/hd-tui --clobber

  build-tauri:
    name: Build Tauri for x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev libssl-dev

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-tauri-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Tauri CLI and Trunk
        run: |
          cargo install tauri-cli trunk

      - name: Build Tauri app
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION="dev-$(git rev-parse --short HEAD)"
          fi
          cargo tauri build --config "{\"package\": {\"version\": \"$VERSION\"}}"

      - name: Upload Tauri artifacts
        uses: actions/upload-artifact@v3
        with:
          name: home-display-tauri-x86_64
          path: |
            target/release/bundle/deb/*.deb
            target/release/bundle/appimage/*.AppImage

      - name: Upload Tauri to release
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} target/release/bundle/deb/home-display*.deb --clobber
          if ls target/release/bundle/appimage/*.AppImage 1> /dev/null 2>&1; then
            gh release upload ${{ github.event.release.tag_name }} target/release/bundle/appimage/*.AppImage --clobber
          fi